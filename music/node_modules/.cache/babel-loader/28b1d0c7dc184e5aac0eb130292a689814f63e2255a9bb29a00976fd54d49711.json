{"ast":null,"code":"var _jsxFileName = \"/Users/waynewang/music_prototype/music/src/components/ItemDetailsModal.js\";\nimport React from 'react';\nimport '../styles/components.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ItemDetailsModal = ({\n  item,\n  onClose\n}) => {\n  if (!item) return null;\n  const {\n    name,\n    itemType\n  } = item;\n\n  // Mock data for different item types\n  const detailsByType = {\n    song: {\n      lyrics: \"These are the sample lyrics of the song...\",\n      album: \"Sample Album\",\n      similarSongs: [\"Similar Song 1\", \"Similar Song 2\", \"Similar Song 3\"]\n    },\n    artist: {\n      bio: \"This is a sample bio for the artist.\",\n      topSongs: [\"Top Song 1\", \"Top Song 2\", \"Top Song 3\"],\n      albums: [\"Album 1\", \"Album 2\", \"Album 3\"]\n    },\n    playlist: {\n      description: \"A curated playlist for rock enthusiasts.\",\n      songs: [\"Song 1\", \"Song 2\", \"Song 3\", \"Song 4\", \"Song 5\"]\n    },\n    album: {\n      tracklist: [\"Track 1\", \"Track 2\", \"Track 3\", \"Track 4\"],\n      releaseDate: \"January 1, 2020\",\n      artist: \"Sample Artist\"\n    }\n  };\n  const details = detailsByType[itemType] || {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close\",\n        onClick: onClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [name, \" (\", itemType, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), itemType === 'song' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Album:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 16\n          }, this), \" \", details.album]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Lyrics:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 16\n          }, this), \" \", details.lyrics]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Similar Songs:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: details.similarSongs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: song\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), itemType === 'artist' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Bio:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 16\n          }, this), \" \", details.bio]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Top Songs:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: details.topSongs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: song\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Albums:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: details.albums.map((album, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: album\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), itemType === 'playlist' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 16\n          }, this), \" \", details.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Songs:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: details.songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: song\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), itemType === 'album' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Artist:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 16\n          }, this), \" \", details.artist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Release Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 16\n          }, this), \" \", details.releaseDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tracklist:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: details.tracklist.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: track\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = ItemDetailsModal;\nexport default ItemDetailsModal;\nvar _c;\n$RefreshReg$(_c, \"ItemDetailsModal\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ItemDetailsModal","item","onClose","name","itemType","detailsByType","song","lyrics","album","similarSongs","artist","bio","topSongs","albums","playlist","description","songs","tracklist","releaseDate","details","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","track","_c","$RefreshReg$"],"sources":["/Users/waynewang/music_prototype/music/src/components/ItemDetailsModal.js"],"sourcesContent":["import React from 'react';\nimport '../styles/components.css';\n\nconst ItemDetailsModal = ({ item, onClose }) => {\n  if (!item) return null;\n\n  const { name, itemType } = item;\n\n  // Mock data for different item types\n  const detailsByType = {\n    song: {\n      lyrics: \"These are the sample lyrics of the song...\",\n      album: \"Sample Album\",\n      similarSongs: [\"Similar Song 1\", \"Similar Song 2\", \"Similar Song 3\"]\n    },\n    artist: {\n      bio: \"This is a sample bio for the artist.\",\n      topSongs: [\"Top Song 1\", \"Top Song 2\", \"Top Song 3\"],\n      albums: [\"Album 1\", \"Album 2\", \"Album 3\"]\n    },\n    playlist: {\n      description: \"A curated playlist for rock enthusiasts.\",\n      songs: [\"Song 1\", \"Song 2\", \"Song 3\", \"Song 4\", \"Song 5\"]\n    },\n    album: {\n      tracklist: [\"Track 1\", \"Track 2\", \"Track 3\", \"Track 4\"],\n      releaseDate: \"January 1, 2020\",\n      artist: \"Sample Artist\"\n    }\n  };\n\n  const details = detailsByType[itemType] || {};\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <button className=\"modal-close\" onClick={onClose}>X</button>\n        <h2>{name} ({itemType})</h2>\n        \n        {itemType === 'song' && (\n          <>\n            <p><strong>Album:</strong> {details.album}</p>\n            <p><strong>Lyrics:</strong> {details.lyrics}</p>\n            <p><strong>Similar Songs:</strong></p>\n            <ul>\n              {details.similarSongs.map((song, index) => (\n                <li key={index}>{song}</li>\n              ))}\n            </ul>\n          </>\n        )}\n\n        {itemType === 'artist' && (\n          <>\n            <p><strong>Bio:</strong> {details.bio}</p>\n            <p><strong>Top Songs:</strong></p>\n            <ul>\n              {details.topSongs.map((song, index) => (\n                <li key={index}>{song}</li>\n              ))}\n            </ul>\n            <p><strong>Albums:</strong></p>\n            <ul>\n              {details.albums.map((album, index) => (\n                <li key={index}>{album}</li>\n              ))}\n            </ul>\n          </>\n        )}\n\n        {itemType === 'playlist' && (\n          <>\n            <p><strong>Description:</strong> {details.description}</p>\n            <p><strong>Songs:</strong></p>\n            <ul>\n              {details.songs.map((song, index) => (\n                <li key={index}>{song}</li>\n              ))}\n            </ul>\n          </>\n        )}\n\n        {itemType === 'album' && (\n          <>\n            <p><strong>Artist:</strong> {details.artist}</p>\n            <p><strong>Release Date:</strong> {details.releaseDate}</p>\n            <p><strong>Tracklist:</strong></p>\n            <ul>\n              {details.tracklist.map((track, index) => (\n                <li key={index}>{track}</li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ItemDetailsModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}