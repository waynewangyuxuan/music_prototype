{"ast":null,"code":"var _jsxFileName = \"/Users/waynewang/music_prototype/music/src/components/ItemDetailsModal.js\";\nimport React from 'react';\nimport '../styles/components.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemDetailsModal = ({\n  item,\n  onClose\n}) => {\n  if (!item) return null;\n\n  // Mock data for details\n  const mockDetails = {\n    lyrics: \"These are the sample lyrics of the song...\",\n    album: \"Sample Album\",\n    similarSongs: [\"Similar Song 1\", \"Similar Song 2\", \"Similar Song 3\"]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close\",\n        onClick: onClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Album:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 12\n        }, this), \" \", mockDetails.album]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Lyrics:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 12\n        }, this), \" \", mockDetails.lyrics]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Similar Songs:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mockDetails.similarSongs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: song\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = ItemDetailsModal;\nexport default ItemDetailsModal;\nvar _c;\n$RefreshReg$(_c, \"ItemDetailsModal\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ItemDetailsModal","item","onClose","mockDetails","lyrics","album","similarSongs","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","song","index","_c","$RefreshReg$"],"sources":["/Users/waynewang/music_prototype/music/src/components/ItemDetailsModal.js"],"sourcesContent":["import React from 'react';\nimport '../styles/components.css';\n\nconst ItemDetailsModal = ({ item, onClose }) => {\n  if (!item) return null;\n\n  // Mock data for details\n  const mockDetails = {\n    lyrics: \"These are the sample lyrics of the song...\",\n    album: \"Sample Album\",\n    similarSongs: [\"Similar Song 1\", \"Similar Song 2\", \"Similar Song 3\"]\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <button className=\"modal-close\" onClick={onClose}>X</button>\n        <h2>{item}</h2>\n        <p><strong>Album:</strong> {mockDetails.album}</p>\n        <p><strong>Lyrics:</strong> {mockDetails.lyrics}</p>\n        <p><strong>Similar Songs:</strong></p>\n        <ul>\n          {mockDetails.similarSongs.map((song, index) => (\n            <li key={index}>{song}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ItemDetailsModal;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAC9C,IAAI,CAACD,IAAI,EAAE,OAAO,IAAI;;EAEtB;EACA,MAAME,WAAW,GAAG;IAClBC,MAAM,EAAE,4CAA4C;IACpDC,KAAK,EAAE,cAAc;IACrBC,YAAY,EAAE,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB;EACrE,CAAC;EAED,oBACEP,OAAA;IAAKQ,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BT,OAAA;MAAKQ,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BT,OAAA;QAAQQ,SAAS,EAAC,aAAa;QAACE,OAAO,EAAEP,OAAQ;QAAAM,QAAA,EAAC;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5Dd,OAAA;QAAAS,QAAA,EAAKP;MAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACfd,OAAA;QAAAS,QAAA,gBAAGT,OAAA;UAAAS,QAAA,EAAQ;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACV,WAAW,CAACE,KAAK;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClDd,OAAA;QAAAS,QAAA,gBAAGT,OAAA;UAAAS,QAAA,EAAQ;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACV,WAAW,CAACC,MAAM;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpDd,OAAA;QAAAS,QAAA,eAAGT,OAAA;UAAAS,QAAA,EAAQ;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACtCd,OAAA;QAAAS,QAAA,EACGL,WAAW,CAACG,YAAY,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxCjB,OAAA;UAAAS,QAAA,EAAiBO;QAAI,GAAZC,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAC3B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACI,EAAA,GA1BIjB,gBAAgB;AA4BtB,eAAeA,gBAAgB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}